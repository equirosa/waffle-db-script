--DROP DATABASE WAFFLE; --ELIMINAR LUEGO ESTA SECCION
CREATE DATABASE WAFFLE;
USE WAFFLE;

--CATEGORIAS


CREATE TABLE CATEGORIA(
	ID INT PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
);
GO
	--INSERTAR
CREATE PROCEDURE CRE_CATEGORIA_PR
	@ID INT,
	@NOMBRE VARCHAR(50)
AS INSERT INTO CATEGORIA VALUES(@ID,@NOMBRE);
GO

	--RETRIEVE ALL
CREATE PROCEDURE RET_ALL_CATEGORIA_PR
AS
	SELECT ID, NOMBRE FROM CATEGORIA;
RETURN 0
GO

	--UPDATE
CREATE PROCEDURE UPD_CATEGORIA_PR
	@ID INT,
	@NOMBRE VARCHAR(50)
AS 
	UPDATE CATEGORIA SET NOMBRE=@NOMBRE WHERE ID=@ID;
GO

	--RETRIEVE BY ID
CREATE PROCEDURE RET_CATEGORIA_PR
	@ID INT
AS
	SELECT ID, NOMBRE FROM CATEGORIA WHERE ID=@ID
GO

	--DELETE
CREATE PROCEDURE DEL_CATEGORIA_PR
	@ID INT
AS
	DELETE FROM CATEGORIA WHERE ID=@ID;
RETURN 0
GO



--DIRECCIONES


CREATE TABLE DIRECCION(
	ID INT PRIMARY KEY,
	LATITUD VARCHAR(50) NOT NULL,
	LONGITUD VARCHAR(50) NOT NULL,
);
GO

CREATE PROCEDURE CRE_DIRECCION_PR
	@ID INT,
	@LATITUD VARCHAR(50),
	@LONGITUD VARCHAR(50)
AS
	INSERT INTO DIRECCION VALUES(@ID,@LATITUD,@LONGITUD);
GO

CREATE PROCEDURE RET_ALL_DIRECCION_PR
AS
	SELECT ID, LATITUD, LONGITUD FROM DIRECCION;
GO

CREATE PROCEDURE RET_DIRECCION_PR
	@ID INT
AS
	SELECT ID, LATITUD, LONGITUD FROM DIRECCION WHERE ID=@ID;
GO

CREATE PROCEDURE UPD_DIRECCION_PR
	@ID INT,
	@LATITUD VARCHAR(50),
	@LONGITUD VARCHAR(50)
AS
	UPDATE DIRECCION SET LATITUD=@LATITUD, LONGITUD=@LONGITUD WHERE ID=@ID;
GO

CREATE PROCEDURE DEL_DIRECCION_PR
	@ID INT
AS
	DELETE FROM DIRECCION WHERE ID=@ID;
GO

--USUARIOS
CREATE TABLE USUARIO(
	CEDULA VARCHAR(50) PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO1 VARCHAR(50) NOT NULL,
	APELLIDO2 VARCHAR(50) NULL,
	CORREO VARCHAR(50) NOT NULL,
	CONTRASENNA VARCHAR(50) NOT NULL,
	TEL VARCHAR(50) NOT NULL,
	PAYPAL VARCHAR(50) NOT NULL,
	FOTO_PERFIL VARCHAR(50) NULL,
	ESTADO VARCHAR(20) NOT NULL,
	TIPO_IDENTIFICACION VARCHAR(50) NOT NULL,
	CODIGO_VERIFICACION VARCHAR(50) NOT NULL,
 );
GO

CREATE PROCEDURE CRE_USUARIO_PR
	@CEDULA VARCHAR(50),
	@NOMBRE VARCHAR(50),
	@APELLIDO1 VARCHAR(50),
	@APELLIDO2 VARCHAR(50),
	@CORREO VARCHAR(50),
	@CONTRASENNA VARCHAR(50),
	@TEL VARCHAR(50),
	@PAYPAL VARCHAR(50),
	@ESTADO VARCHAR(20),
	@TIPO_IDENTIFICACION VARCHAR(50),
	@CODIGO_VERIFICACION VARCHAR(50)
AS
	INSERT INTO USUARIO VALUES(@CEDULA,@NOMBRE,@APELLIDO1,@APELLIDO2,@CORREO,
		@CONTRASENNA, @TEL, @PAYPAL, @ESTADO, @TIPO_IDENTIFICACION,
		@CODIGO_VERIFICACION);
GO

CREATE PROCEDURE RET_ALL_USUARIO_PR
AS
	SELECT CEDULA,NOMBRE,APELLIDO1,APELLIDO2,CORREO,
		CONTRASENNA, TEL, PAYPAL, FOTO_PERFIL, ESTADO, TIPO_IDENTIFICACION,
		CODIGO_VERIFICACION FROM USUARIO;
GO

CREATE PROCEDURE RET_USUARIO_PR
	@CEDULA VARCHAR(50)
AS
	SELECT CEDULA,NOMBRE,APELLIDO1,APELLIDO2,CORREO,
		CONTRASENNA, TEL, PAYPAL, FOTO_PERFIL, ESTADO, TIPO_IDENTIFICACION,
		CODIGO_VERIFICACION FROM USUARIO WHERE CEDULA=@CEDULA;
GO

CREATE PROCEDURE UPD_USUARIO_PR
	@CEDULA VARCHAR(50),
	@NOMBRE VARCHAR(50),
	@APELLIDO1 VARCHAR(50),
	@APELLIDO2 VARCHAR(50),
	@CORREO VARCHAR(50),
	@CONTRASENNA VARCHAR(50),
	@TEL VARCHAR(50),
	@PAYPAL VARCHAR(50),
	@ESTADO VARCHAR(20),
	@TIPO_IDENTIFICACION VARCHAR(50),
	@CODIGO_VERIFICACION VARCHAR(50)
AS
	UPDATE USUARIO SET NOMBRE=@NOMBRE,APELLIDO1=@APELLIDO1,APELLIDO2=@APELLIDO2,
		CORREO=@CORREO,CONTRASENNA=@CONTRASENNA,TEL=@TEL,PAYPAL=@PAYPAL,ESTADO=@ESTADO,
		TIPO_IDENTIFICACION=@TIPO_IDENTIFICACION,CODIGO_VERIFICACION=@CODIGO_VERIFICACION WHERE CEDULA=@CEDULA;
GO

CREATE PROCEDURE DEL_USUARIO_PR
	@CEDULA VARCHAR(50)
AS
	DELETE FROM USUARIO WHERE CEDULA=@CEDULA;
GO


--CADENAS
CREATE TABLE CADENA(
	ID INT PRIMARY KEY,
	CEDULA_DUENNIO VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA),
	LOGO VARCHAR(100) NOT NULL);
GO

CREATE PROCEDURE CRE_CADENA_PR
	@ID INT,
	@CEDULA_DUENNIO VARCHAR(50),
	@LOGO VARCHAR(100)
AS
	INSERT INTO CADENA VALUES(@ID,@CEDULA_DUENNIO,@LOGO);
GO

CREATE PROCEDURE RET_ALL_CADENA_PR
AS
	SELECT ID, CEDULA_DUENNIO, LOGO FROM CADENA;
GO

CREATE PROCEDURE RET_CADENA_PR
	@ID INT
AS
	SELECT ID, CEDULLA_DUENNIO, LOGO FROM CADENA WHERE ID=@ID;
GO

CREATE PROCEDURE UPD_CADENA_PR
	@ID INT,
	@CEDULA_DUENNIO VARCHAR(50),
	@LOGO VARCHAR(100)
AS
	UPDATE CADENA SET CEDULA_DUENNIO=@CEDULA_DUENNIO,LOGO=@LOGO WHERE ID=@ID;
GO

CREATE PROCEDURE DEL_CADENA_PR
	@ID INT
AS
	DELETE FROM CADENA WHERE ID=@ID;
GO

--COMERCIOS

CREATE TABLE COMERCIO(
	CEDULA_JURIDICA VARCHAR(50) PRIMARY KEY,
	CEDULA_DUENO VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA),
	ID_DIRECCION INT FOREIGN KEY REFERENCES DIRECCION(ID),
	ID_CATEGORIA INT FOREIGN KEY REFERENCES CATEGORIA(ID),
	ID_CADENA INT FOREIGN KEY REFERENCES CADENA(ID),
	REGIMEN VARCHAR(50) NOT NULL,
	TELEFONO VARCHAR(50) NOT NULL,
	HORARIO_APERTURA TIME(7) NOT NULL,
	HORARIO_CLAUSURA TIME(7) NOT NULL,
	UBICACION_ESCRITA VARCHAR(50) NOT NULL,
	NOMBRE_COMERCIAL VARCHAR(50) NOT NULL,
	FECHA_CREACION DATETIME NOT NULL,
	WEB VARCHAR(50) NOT NULL,
	ESTADO VARCHAR(10) NOT NULL,
	SUPERVISOR VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA));
GO

	--INSERT
CREATE PROCEDURE CRE_COMERCIO_PR
	@CEDULA_JURIDICA VARCHAR(50),
	@CEDULA_DUENO VARCHAR(50),
	@ID_DIRECCION INT,
	@ID_CATEGORIA INT,
	@ID_CADENA INT,
	@REGIMEN VARCHAR(50),
	@TELEFONO VARCHAR(50),
	@HORARIO_APERTURA TIME(7),
	@HORARIO_CLAUSURA TIME(7),
	@UBICACION_ESCRITA VARCHAR(50),
	@NOMBRE_COMERCIAL VARCHAR(50),
	@FECHA_CREACION DATE,
	@WEB VARCHAR(50),
	@ESTADO VARCHAR(10),
	@SUPERVISOR VARCHAR(50)
AS INSERT INTO COMERCIO VALUES (@CEDULA_JURIDICA,@CEDULA_DUENO,@ID_DIRECCION,@ID_CADENA,@ID_CADENA,@REGIMEN,@TELEFONO,
		@HORARIO_APERTURA,@HORARIO_CLAUSURA,@UBICACION_ESCRITA,@NOMBRE_COMERCIAL,@FECHA_CREACION,@WEB,@ESTADO,@SUPERVISOR);
	GO

	--RETRIEVE ALL
CREATE PROCEDURE RET_ALL_COMERCIO_PR
AS SELECT CEDULA_JURIDICA,CEDULA_DUENO,ID_DIRECCION,ID_CATEGORIA,ID_CADENA,REGIMEN,TELEFONO,HORARIO_APERTURA,HORARIO_CLAUSURA,
	UBICACION_ESCRITA,NOMBRE_COMERCIAL,FECHA_CREACION,WEB,ESTADO,SUPERVISOR FROM COMERCIO;
GO

CREATE PROCEDURE RET_COOMERCIO_PR
	@CEDULA_JURIDICA VARCHAR(50)
AS
	SELECT CEDULA_JURIDICA,CEDULA_DUENO,ID_DIRECCION,ID_CATEGORIA,ID_CADENA,REGIMEN,TELEFONO,HORARIO_APERTURA,HORARIO_CLAUSURA,
	UBICACION_ESCRITA,NOMBRE_COMERCIAL,FECHA_CREACION,WEB,ESTADO,SUPERVISOR FROM COMERCIO WHERE CEDULA_JURIDICA=@CEDULA_JURIDICA;
GO

CREATE PROCEDURE UPD_COMERCIO_PR
	@CEDULA_JURIDICA VARCHAR(50),
	@CEDULA_DUENO VARCHAR(50),
	@ID_DIRECCION INT,
	@ID_CATEGORIA INT,
	@ID_CADENA INT,
	@REGIMEN VARCHAR(50),
	@TELEFONO VARCHAR(50),
	@HORARIO_APERTURA TIME(7),
	@HORARIO_CLAUSURA TIME(7),
	@UBICACION_ESCRITA VARCHAR(50),
	@NOMBRE_COMERCIAL VARCHAR(50),
	@FECHA_CREACION DATE,
	@WEB VARCHAR(50),
	@ESTADO VARCHAR(10),
	@SUPERVISOR VARCHAR(50)
AS
	UPDATE COMERCIO SET CEDULA_DUENO=@CEDULA_DUENO,ID_DIRECCION=@ID_DIRECCION,ID_CATEGORIA=@ID_CATEGORIA,
		ID_CADENA=@ID_CADENA,REGIMEN=@REGIMEN,TELEFONO=@TELEFONO,HORARIO_APERTURA=@HORARIO_APERTURA,HORARIO_CLAUSURA=@HORARIO_CLAUSURA,
		NOMBRE_COMERCIAL=@NOMBRE_COMERCIAL,FECHA_CREACION=@FECHA_CREACION,WEB=@WEB,ESTADO=@ESTADO,SUPERVISOR=@SUPERVISOR WHERE CEDULA_JURIDICA=@CEDULA_JURIDICA;
GO

CREATE PROCEDURE DEL_COMERCIO_PR
	@CEDULA_JURIDICA VARCHAR(50)
AS
	DELETE FROM COMERCIO WHERE CEDULA_JURIDICA=@CEDULA_JURIDICA;
GO
--FLOTILLAS

CREATE TABLE FLOTILLA(
	ID INT PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	DESCRIPCION VARCHAR(50) NULL
);
GO

CREATE PROCEDURE CRE_FLOTILLA_PR
	@ID INT,
	@NOMBRE VARCHAR(50)
AS
	INSERT INTO FLOTILLA VALUES(@ID,@NOMBRE);
GO

CREATE PROCEDURE RET_ALL_FLOTILLA_PR
AS
	SELECT ID,NOMBRE FROM FLOTILLA;
GO

CREATE PROCEDURE RET_FLOTILLA_PR
	@ID INT
AS
	SELECT ID,NOMBRE FROM FLOTILLA WHERE ID=@ID;
GO

CREATE PROCEDURE UPD_FLOTILLA_PR
	@ID INT,
	@NOMBRE VARCHAR(50)
AS
	UPDATE FLOTILLA SET NOMBRE=@NOMBRE WHERE ID=@ID;
GO

CREATE PROCEDURE DEL_FLOTILLA_PR
	@ID VARCHAR(50)
AS
	DELETE FROM FLOTILLA WHERE ID=@ID;
GO


--HISTORIAL DE CONTRASEÑAS

CREATE TABLE HISTORICO_CONTRASENA(
	FECHA DATETIME NOT NULL,
	CEDULA_USUARIO VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA),
	CONTRASENA VARCHAR(50) NOT NULL
);
GO

CREATE PROCEDURE CRE_HISTORICO_CONTRASENA_PR
	@CEDULA_USUARIO VARCHAR(50),
	@CONTRASENA VARCHAR(50)
AS
	INSERT INTO HISTORICO_CONTRASENA VALUES(SYSDATETIME,@CEDULA_USUARIO,@CONTRASENA);
GO

CREATE PROCEDURE RET_HISTORICO_CONTRASENA_PR
	@CEDULA_USUARIO VARCHAR(50)
AS
	SELECT FECHA,CEDULA_USUARIO,CONTRASENA FROM HISTORICO_CONTRASENA WHERE CEDULA_USUARIO=@CEDULA_USUARIO;
GO

CREATE PROCEDURE RET_ALL_HISTORICO_CONTRASENNA_PR
AS
	SELECT FECHA,CEDULA_USUARIO,CONTRASENA FROM HISTORICO_CONTRASENA;
GO

--MEMBRESIAS
CREATE TABLE MEMBRESIA(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	CEDULA_USUARIO VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA),
	MONTO FLOAT NOT NULL,
	FECHA_COMPRADA DATE NOT NULL,
	FECHA_EXPIRADA DATE NOT NULL,
	COMISION_PEDIDO FLOAT NOT NULL,
	TIPO_MEMBRESIA VARCHAR(50) NOT NULL);
GO

CREATE PROCEDURE CRE_MEMBRESIA_PR
	@CEDULA_USUARIO VARCHAR(50),
	@MONTO FLOAT,
	@FECHA_COMPRADA DATE,
	@FECHA_EXPIRADA DATE,
	@COMISION_PEDIDO FLOAT,
	@TIPO_MEMBRESIA VARCHAR(50)
AS
	INSERT INTO MEMBRESIA(CEDULA_USUARIO,MONTO,FECHA_COMPRADA,FECHA_EXPIRADA,COMISION_PEDIDO,TIPO_MEMBRESIA) VALUES(@CEDULA_USUARIO,@MONTO,@FECHA_COMPRADA,@FECHA_EXPIRADA,@COMISION_PEDIDO,@TIPO_MEMBRESIA);
GO

CREATE PROCEDURE RET_ALL_MEMBRESIA_PR
AS
	SELECT CEDULA_USUARIO,MONTO,FECHA_COMPRADA,FECHA_EXPIRADA,COMISION_PEDIDO,TIPO_MEMBRESIA FROM MEMBRESIA;
GO

CREATE PROCEDURE RET_MEMBRESIA_PR
	@ID INT
AS
	SELECT CEDULA_USUARIO,MONTO,FECHA_COMPRADA,FECHA_EXPIRADA,COMISION_PEDIDO,TIPO_MEMBRESIA FROM MEMBRESIA 
	WHERE ID=@ID;
GO

CREATE PROCEDURE UPD_MEMBRESIA_PR
	@ID INT,
	@CEDULA_USUARIO VARCHAR(50),
	@MONTO FLOAT,
	@FECHA_COMPRADA DATE,
	@FECHA_EXPIRADA DATE,
	@COMISION_PEDIDO FLOAT,
	@TIPO_MEMBRESIA VARCHAR(50)
AS
	UPDATE MEMBRESIA SET MONTO=@MONTO,FECHA_COMPRADA=@FECHA_COMPRADA,FECHA_EXPIRADA=@FECHA_EXPIRADA,COMISION_PEDIDO=@COMISION_PEDIDO,
		TIPO_MEMBRESIA=@TIPO_MEMBRESIA,CEDULA_USUARIO=@CEDULA_USUARIO WHERE ID=@ID;
GO

CREATE PROCEDURE DEL_MEMBRESIA_PR
	@ID INT
AS
	DELETE FROM MEMBRESIA WHERE ID=@ID;
GO




--VEHICULOS

CREATE TABLE VEHICULO(
	PLACA VARCHAR(50) PRIMARY KEY,
	MODELO VARCHAR(50) NOT NULL,
	TIPO VARCHAR(50) NOT NULL,
	CEDULA_DUENNIO VARCHAR(50) NOT NULL FOREIGN KEY REFERENCES USUARIO(CEDULA),
	ID_FLOTILLA INT NOT NULL FOREIGN KEY REFERENCES FLOTILLA(ID));
GO

CREATE PROCEDURE CRE_VEHICULO_PR
	@PLACA VARCHAR(50) NOT NULL,
	@MODELO VARCHAR(50) NOT NULL,
	@TIPO VARCHAR(50) NOT NULL,
	@CEDULA_DUENNIO VARCHAR(50) NOT NULL,
	@ID_FLOTILLA INT NOT NULL
AS
	INSERT INTO VEHICULO VALUES(@PLACA,@MODELO,@TIPO,@CEDULA_DUENNIO,@ID_FLOTILLA);
GO

CREATE PROCEDURE RET_VEHICULO_PR
	@PLACA VARCHAR(50),
	@CEDULA_DUENNIO VARCHAR(50)
AS
	SELECT PLACA,MODELO,TIPO,CEDULA_DUENNIO,ID_FLOTILLA FROM VEHICULO WHERE PLACA=@PLACA OR CEDULA_DUENNIO=@CEDULA_DUENNIO;
GO

CREATE PROCEDURE RET_ALL_VEHICULO_PR
AS
	SELECT PLACA,MODELO,TIPO,CEDULA_DUENNIO,ID_FLOTILLA FROM VEHICULO;
GO

CREATE PROCEDURE UPD_VEHICULO_PR
	@PLACA VARCHAR(50) NOT NULL,
	@MODELO VARCHAR(50) NOT NULL,
	@TIPO VARCHAR(50) NOT NULL,
	@CEDULA_DUENNIO VARCHAR(50) NOT NULL,
	@ID_FLOTILLA INT NOT NULL
AS
	UPDATE VEHICULO SET MODELO=@MODELO,TIPO=@TIPO,CEDULA_DUENNIO=@CEDULA_DUENNIO,ID_FLOTILLA=@ID_FLOTILLA;
GO

CREATE PROCEDURE DEL_VEHICULO_PR
	@PLACA VARCHAR(50) NOT NULL
AS
	DELETE FROM VEHICULO WHERE PLACA=@PLACA;
GO

--PRODUCTOS

CREATE TABLE PRODUCTO(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	ID_CATEGORIA INT NOT NULL FOREIGN KEY REFERENCES CATEGORIA(ID),
	CEDULA_COMERCIO VARCHAR(50) NOT NULL FOREIGN KEY REFERENCES COMERCIO(CEDULA_JURIDICA),
	PRECIO FLOAT NOT NULL,
	ESTADO VARCHAR(10) NOT NULL);
GO

CREATE PROCEDURE CRE_PRODUCTO_PR
	@NOMBRE VARCHAR(50) NOT NULL,
	@ID_CATEGORIA INT NOT NULL,
	@CEDULA_COMERCIO VARCHAR(50) NOT NULL,
	@PRECIO FLOAT NOT NULL,
	@ESTADO VARCHAR(10) NOT NULL
AS
	INSERT INTO PRODUCTO(NOMBRE,ID_CATEGORIA,CEDULA_COMERCIO,PRECIO,ESTADO) 
	VALUES(@NOMBRE,@ID_CATEGORIA,@CEDULA_COMERCIO,@PRECIO,@ESTADO);
GO

CREATE PROCEDURE RET_PRODUCTO_PR
	@ID INT,
	@ID_CATEGORIA VARCHAR(50),
	@ESTADO VARCHAR(50),
	@CEDULA_COMERCIO VARCHAR(50)
AS
	SELECT ID,NOMBRE,ID_CATEGORIA,ESTADO,CEDULA_COMERCIO,PRECIO FROM PRODUCTO WHERE ID=@ID OR ID_CATEGORIA=@ID_CATEGORIA OR
		ESTADO=@ESTADO OR CEDULA_COMERCIO=@CEDULA_COMERCIO;
GO

CREATE PROCEDURE RET_ALL_PRODUCTO_PR
AS
	SELECT ID,NOMBRE,ID_CATEGORIA,ESTADO,CEDULA_COMERCIO,PRECIO FROM PRODUCTO;
GO

CREATE PROCEDURE UPD_PRODUCTO_PR
	@ID INT,
	@NOMBRE VARCHAR(50) NOT NULL,
	@ID_CATEGORIA INT NOT NULL,
	@CEDULA_COMERCIO VARCHAR(50) NOT NULL,
	@PRECIO FLOAT NOT NULL,
	@ESTADO VARCHAR(10) NOT NULL
AS
	UPDATE PRODUCTO SET NOMBRE=@NOMBRE,ID_CATEGORIA=@ID_CATEGORIA,CEDULA_COMERCIO=@CEDULA_COMERCIO,PRECIO=@PRECIO,ESTADO=@ESTADO
	WHERE ID=@ID;
GO

CREATE PROCEDURE DEL_PRODUCTO_PR
	@ID INT NOT NULL
AS
	DELETE FROM PRODUCTO WHERE ID=@ID;
GO
--ORDENES
CREATE TABLE ORDEN(
	ID INT NOT NULL,
	ID_DIRECCION INT NOT NULL,
	CEDULA_USUARIO VARCHAR(50) NOT NULL,
	CEDULA_COMERCIO VARCHAR(50) NOT NULL,
	CEDULA_CONDUCTOR VARCHAR(50) NOT NULL,
	ESTADO VARCHAR(50) NOT NULL,
	FECHA DATE NOT NULL,
	CONSTRAINT PK_ORDEN PRIMARY KEY CLUSTERED
	(
		ID ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON PRIMARY
	) ON PRIMARY
	GO

ALTER TABLE ORDEN WITH CHECK ADD CONSTRAINT FK_USUARIO_FINAL FOREIGN KEY(CEDULA_USUARIO)
REFERENCES USUARIO (CEDULA)
GO

ALTER TABLE ORDEN CHECK CONSTRAINT FK_USUARIO_FINAL
GO

ALTER TABLE ORDEN WITH CHECK ADD CONSTRAINT FK_TRANSPORTISTA FOREIGN KEY(CEDULA_CONDUCTOR)
REFERENCES USUARIO (CEDULA)
GO

ALTER TABLE ORDEN CHECK CONSTRAINT FK_TRANSPORTISTA
GO

ALTER TABLE ORDEN WITH CHECK ADD CONSTRAINT FK_COMERCIO_ORDEN FOREIGN KEY(CEDULA_COMERCIO) REFERENCES COMERCIO (CEDULA_JURIDICA)
GO

ALTER TABLE ORDEN CHECK CONSTRAINT FK_COMERCIO_ORDEN
GO

--DETALLES DE ORDEN
CREATE TABLE ORDEN_DETALLE(
	ID INT NOT NULL,
	ID_ORDEN INT NOT NULL,
	ID_PRODUCTO INT NOT NULL,
	NOMBRE_PRODUCTO VARCHAR(50) NOT NULL,
	PRECIO FLOAT NOT NULL,
	CANTIDAD INT NOT NULL,
	CALIFICACION INT NOT NULL,
	CONSTRAINT PK_ORDEN_DETALLE PRIMARY KEY CLUSTERED
	(
		ID ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON PRIMARY
	) ON PRIMARY
	GO

ALTER TABLE ORDEN_DETALLE WITH CHECK ADD CONSTRAINT FK_ORDEN FOREIGN KEY (ID_ORDEN)
REFERENCES ORDEN (ID)
GO

--EXCEPCIONES
CREATE TABLE EXCEPCION(
	ID INT NOT NULL PRIMARY KEY,
	MENSAJE VARCHAR(500) NOT NULL
	);

INSERT INTO EXCEPCION VALUES(0,'Error.');
INSERT INTO EXCEPCION VALUES(1,'Identificador no válido.');
INSERT INTO EXCEPCION VALUES(2,'El cliente debe tener 15 años para registrarse.');
INSERT INTO EXCEPCION VALUES(3,'El cliente debe tener 18 años para pedir bebidas alcohólicas.');
INSERT INTO EXCEPCION VALUES(4,'Ya existe una entrada registrada con esa identifiación.');
GO
	--RETRIEVE ALL
CREATE PROCEDURE RET_ALL_EXCEPCION_PR
AS
	SELECT ID, MENSAJE FROM EXCEPCION;
RETURN 0
GO

	--RETRIEVE
CREATE PROCEDURE RET_EXCEPCION_PR
	@ID INT
AS
	SELECT ID, MENSAJE FROM EXCEPCION WHERE ID=@ID;
RETURN 0
GO

--MONEDERO
CREATE TABLE MONEDERO(
	ID INT PRIMARY KEY,
	CEDULA_USUARIO VARCHAR(50) FOREIGN KEY REFERENCES USUARIO(CEDULA),
	SALDO FLOAT NOT NULL
	);
	GO

	--INSERT
CREATE PROCEDURE CRE_MONEDERO_PR
	@ID INT,
	@CEDULA_USUARIO VARCHAR(50)
AS
	INSERT INTO MONEDERO VALUES(@ID,@CEDULA_USUARIO,0);
GO

	--RETRIEVE BY USER ID
CREATE PROCEDURE RET_MONEDERO_PR
	@CEDULA_USUARIO VARCHAR(50)
AS
	SELECT ID, CEDULA_USUARIO, SALDO FROM MONEDERO WHERE CEDULA_USUARIO=@CEDULA_USUARIO;
GO

